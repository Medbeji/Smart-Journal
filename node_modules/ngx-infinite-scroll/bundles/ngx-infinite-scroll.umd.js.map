{"version":3,"file":"ngx-infinite-scroll.umd.js","sources":["../../src/modules/ngx-infinite-scroll.module.ts","../../public_api.ts","../../src/modules/infinite-scroll.directive.ts","../../src/services/scroll-resolver.ts","../../src/services/scroll-register.ts","../../src/services/position-resolver.ts","../../src/services/axis-resolver.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\nimport { AxisResolverFactory } from '../services/axis-resolver';\nimport { PositionResolverFactory } from '../services/position-resolver';\nimport { ScrollRegister } from '../services/scroll-register';\nimport { ScrollResolver } from '../services/scroll-resolver';\nexport class InfiniteScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [InfiniteScrollDirective],\n  exports: [InfiniteScrollDirective],\n  imports: [],\n  providers: [\n    AxisResolverFactory,\n    PositionResolverFactory,\n    ScrollRegister,\n    ScrollResolver\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InfiniteScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\nexport { InfiniteScrollModule } from './src/modules/ngx-infinite-scroll.module';\n\n","import { InfiniteScrollEvent, ScrollStats, PositionStats } from '../models';\nimport {\n  Directive, ElementRef, Input, Output,\n  EventEmitter, OnDestroy, OnInit,\n  SimpleChanges, NgZone\n} from '@angular/core';\nimport { PositionResolverFactory } from '../services/position-resolver';\nimport { ScrollRegister, ScrollRegisterConfig } from '../services/scroll-register';\nimport { ScrollResolver } from '../services/scroll-resolver';\nimport { Subscription } from 'rxjs/Subscription';\nexport class InfiniteScrollDirective implements OnDestroy, OnInit {\n   scrolled = new EventEmitter<InfiniteScrollEvent>();\n   scrolledUp = new EventEmitter<InfiniteScrollEvent>();\n\n   infiniteScrollDistance: number = 2;\n   infiniteScrollUpDistance: number = 1.5;\n   infiniteScrollThrottle: number = 300;\n   infiniteScrollDisabled: boolean = false;\n   infiniteScrollContainer: any = null;\n   scrollWindow: boolean = true;\n   immediateCheck: boolean = false;\n   horizontal: boolean = false;\n   alwaysCallback: boolean = false;\nprivate disposeScroller: Subscription;\n/**\n * @param {?} element\n * @param {?} zone\n * @param {?} positionResolverFactory\n * @param {?} scrollRegister\n * @param {?} scrollerResolver\n */\nconstructor(\nprivate element: ElementRef,\nprivate zone: NgZone,\nprivate positionResolverFactory: PositionResolverFactory,\nprivate scrollRegister: ScrollRegister,\nprivate scrollerResolver: ScrollResolver\n  ) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    if (typeof window !== 'undefined') {\n      const /** @type {?} */ containerElement = this.resolveContainerElement();\n      const /** @type {?} */ positionResolver = this.positionResolverFactory.create({\n        horizontal: this.horizontal,\n        windowElement: containerElement\n      });\n      const /** @type {?} */ options: ScrollRegisterConfig = {\n        container: positionResolver.container,\n        filterBefore: () => !this.infiniteScrollDisabled,\n        mergeMap: () => positionResolver.calculatePoints(this.element),\n        scrollHandler: (container: PositionStats) => this.handleOnScroll(container),\n        throttleDuration: this.infiniteScrollThrottle\n      };\n      this.disposeScroller = this.scrollRegister.attachEvent(options);\n    }\n  }\n/**\n * @param {?} container\n * @return {?}\n */\nhandleOnScroll(container: PositionStats) {\n    const /** @type {?} */ scrollResolverConfig = {\n      distance: {\n        down: this.infiniteScrollDistance,\n        up: this.infiniteScrollUpDistance\n      }\n    };\n    const /** @type {?} */ scrollStats: ScrollStats = this.scrollerResolver.getScrollStats(container, scrollResolverConfig);\n    if (this.shouldTriggerEvents(scrollStats.shouldScroll)) {\n      const /** @type {?} */ infiniteScrollEvent: InfiniteScrollEvent = {\n        currentScrollPosition: container.scrolledUntilNow\n      };\n      if (scrollStats.isScrollingDown) {\n        this.onScrollDown(infiniteScrollEvent);\n      } else {\n        this.onScrollUp(infiniteScrollEvent);\n      }\n    }\n  }\n/**\n * @param {?} shouldScroll\n * @return {?}\n */\nshouldTriggerEvents(shouldScroll: boolean) {\n    return (this.alwaysCallback || shouldScroll) && !this.infiniteScrollDisabled;\n  }\n/**\n * @return {?}\n */\nngOnDestroy () {\n    if (this.disposeScroller) {\n      this.disposeScroller.unsubscribe();\n    }\n  }\n/**\n * @param {?=} data\n * @return {?}\n */\nonScrollDown(data: InfiniteScrollEvent = { currentScrollPosition: 0 }) {\n    this.zone.run(() => this.scrolled.emit(data));\n  }\n/**\n * @param {?=} data\n * @return {?}\n */\nonScrollUp(data: InfiniteScrollEvent = { currentScrollPosition: 0 }) {\n    this.zone.run(() => this.scrolledUp.emit(data));\n  }\n/**\n * @return {?}\n */\nprivate resolveContainerElement(): any {\n    const /** @type {?} */ selector = this.infiniteScrollContainer;\n    const /** @type {?} */ hasWindow = window && window.hasOwnProperty('document');\n    const /** @type {?} */ containerIsString = selector && hasWindow && typeof(this.infiniteScrollContainer) === 'string';\n    let /** @type {?} */ container = containerIsString\n      ? window.document.querySelector(selector)\n      : selector;\n    if (!selector) {\n      container = this.scrollWindow ? window : this.element;\n    }\n    return container;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: PositionResolverFactory, },\n{type: ScrollRegister, },\n{type: ScrollResolver, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'scrolled': [{ type: Output },],\n'scrolledUp': [{ type: Output },],\n'infiniteScrollDistance': [{ type: Input },],\n'infiniteScrollUpDistance': [{ type: Input },],\n'infiniteScrollThrottle': [{ type: Input },],\n'infiniteScrollDisabled': [{ type: Input },],\n'infiniteScrollContainer': [{ type: Input },],\n'scrollWindow': [{ type: Input },],\n'immediateCheck': [{ type: Input },],\n'horizontal': [{ type: Input },],\n'alwaysCallback': [{ type: Input },],\n};\n}\n\nfunction InfiniteScrollDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrolled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrolledUp;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollDistance;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollUpDistance;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollThrottle;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollDisabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollContainer;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollWindow;\n/** @type {?} */\nInfiniteScrollDirective.prototype.immediateCheck;\n/** @type {?} */\nInfiniteScrollDirective.prototype.horizontal;\n/** @type {?} */\nInfiniteScrollDirective.prototype.alwaysCallback;\n/** @type {?} */\nInfiniteScrollDirective.prototype.disposeScroller;\n/** @type {?} */\nInfiniteScrollDirective.prototype.element;\n/** @type {?} */\nInfiniteScrollDirective.prototype.zone;\n/** @type {?} */\nInfiniteScrollDirective.prototype.positionResolverFactory;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollRegister;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollerResolver;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { PositionStats, ScrollerConfig } from '../models';\nimport { Injectable } from '@angular/core';\nexport class ScrollResolver {\npublic lastScrollPosition: number = 0;\n/**\n * @param {?} container\n * @param {?} config\n * @param {?} scrollingDown\n * @return {?}\n */\nshouldScroll (container: PositionStats, config: ScrollerConfig, scrollingDown: boolean) {\n    const /** @type {?} */ distance = config.distance;\n    let /** @type {?} */ remaining: number;\n    let /** @type {?} */ containerBreakpoint: number;\n    if (scrollingDown) {\n      remaining = container.totalToScroll - container.scrolledUntilNow;\n      containerBreakpoint = container.height * distance.down + 1;\n    } else {\n      remaining = container.scrolledUntilNow;\n      containerBreakpoint = container.height * distance.up + 1;\n    }\n    const /** @type {?} */ shouldScroll: boolean = remaining <= containerBreakpoint;\n    this.lastScrollPosition = container.scrolledUntilNow;\n    return shouldScroll;\n  }\n/**\n * @param {?} container\n * @return {?}\n */\nisScrollingDown (container: PositionStats) {\n    return this.lastScrollPosition < container.scrolledUntilNow;\n  }\n/**\n * @param {?} container\n * @param {?} config\n * @return {?}\n */\ngetScrollStats (container: PositionStats, config: ScrollerConfig) {\n    const /** @type {?} */ isScrollingDown = this.isScrollingDown(container);\n    const /** @type {?} */ shouldScroll = this.shouldScroll(container, config, isScrollingDown);\n    return { isScrollingDown, shouldScroll };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollResolver.ctorParameters;\n/** @type {?} */\nScrollResolver.prototype.lastScrollPosition;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ContainerRef } from '../models';\nimport { Injectable, ElementRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/observable/of';\nimport'rxjs/add/operator/sampleTime';\nimport'rxjs/add/operator/filter';\nimport'rxjs/add/operator/mergeMap';\n\nexport interface ScrollRegisterConfig {\n  container: ContainerRef;\n  throttleDuration: number;\n  filterBefore: () => boolean;\n  mergeMap: Function;\n  scrollHandler: (value: any) => void;\n}\nexport class ScrollRegister {\n/**\n * @param {?} options\n * @return {?}\n */\nattachEvent (options: ScrollRegisterConfig): Subscription {\n    const /** @type {?} */ scroller$: Subscription = Observable.fromEvent(options.container, 'scroll')\n      .sampleTime(options.throttleDuration)\n      .filter(options.filterBefore)\n      .mergeMap((ev: any) => Observable.of(options.mergeMap(ev)))\n      .subscribe(options.scrollHandler);\n    return scroller$;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollRegister_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollRegister.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollRegister.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { AxisResolver, AxisResolverFactory } from './axis-resolver';\nimport { ContainerRef, PositionElements, PositionStats } from '../models';\nexport class PositionResolverFactory {\n/**\n * @param {?} axisResolver\n */\nconstructor(private axisResolver: AxisResolverFactory) {\n  }\n/**\n * @param {?} options\n * @return {?}\n */\ncreate (options: PositionElements) {\n    return new PositionResolver(this.axisResolver.create(!options.horizontal), options);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AxisResolverFactory, },\n];\n}\n\nfunction PositionResolverFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nPositionResolverFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPositionResolverFactory.ctorParameters;\n/** @type {?} */\nPositionResolverFactory.prototype.axisResolver;\n}\n\nexport class PositionResolver {\nprivate documentElement: ContainerRef;\nprivate isContainerWindow: boolean;\npublic container: ContainerRef;\n/**\n * @param {?} axis\n * @param {?} options\n */\nconstructor (private axis: AxisResolver,\nprivate options: PositionElements) {\n    this.resolveContainer(this.options.windowElement);\n    this.defineContainer(this.options.windowElement);\n  }\n/**\n * @param {?} windowElement\n * @return {?}\n */\ndefineContainer(windowElement: ContainerRef) {\n    if (this.resolveContainer(windowElement) || !windowElement.nativeElement) {\n      this.container = windowElement;\n    } else {\n      this.container = windowElement.nativeElement;\n    }\n    return this.container;\n  }\n/**\n * @param {?} windowElement\n * @return {?}\n */\nresolveContainer(windowElement: ContainerRef): boolean {\n    const /** @type {?} */ isContainerWindow = Object.prototype.toString.call(windowElement).includes('Window');\n    this.isContainerWindow = isContainerWindow;\n    return isContainerWindow;\n  }\n/**\n * @return {?}\n */\ngetDocumentElement() {\n    return this.isContainerWindow\n      ? this.options.windowElement.document.documentElement\n      : null;\n  }\n/**\n * @param {?} element\n * @return {?}\n */\ncalculatePoints (element: ElementRef) {\n    return this.isContainerWindow\n      ? this.calculatePointsForWindow(element)\n      : this.calculatePointsForElement(element);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\ncalculatePointsForWindow (element: ElementRef): PositionStats {\n    // container's height\n    const /** @type {?} */ height = this.height(this.container);\n    // scrolled until now / current y point\n    const /** @type {?} */ scrolledUntilNow = height + this.pageYOffset(this.getDocumentElement());\n    // total height / most bottom y point\n    const /** @type {?} */ totalToScroll = this.offsetTop(element.nativeElement) + this.height(element.nativeElement);\n    return { height, scrolledUntilNow, totalToScroll };\n  }\n/**\n * @param {?} element\n * @return {?}\n */\ncalculatePointsForElement (element: ElementRef) {\n    let /** @type {?} */ scrollTop    = this.axis.scrollTopKey();\n    let /** @type {?} */ scrollHeight = this.axis.scrollHeightKey();\n    const /** @type {?} */ container = this.container;\n\n    const /** @type {?} */ height = this.height(container);\n    // perhaps use this.container.offsetTop instead of 'scrollTop'\n    const /** @type {?} */ scrolledUntilNow = container[scrollTop];\n    let /** @type {?} */ containerTopOffset = 0;\n    const /** @type {?} */ offsetTop = this.offsetTop(container);\n    if (offsetTop !== void 0) {\n      containerTopOffset = offsetTop;\n    }\n    const /** @type {?} */ totalToScroll = container[scrollHeight];\n    return { height, scrolledUntilNow, totalToScroll };\n  }\n/**\n * @param {?} elem\n * @return {?}\n */\nprivate height (elem: any) {\n    let /** @type {?} */ offsetHeight = this.axis.offsetHeightKey();\n    let /** @type {?} */ clientHeight = this.axis.clientHeightKey();\n\n    // elem = elem.nativeElement;\n    if (isNaN(elem[offsetHeight])) {\n      return this.getDocumentElement()[clientHeight];\n    } else {\n      return elem[offsetHeight];\n    }\n  }\n/**\n * @param {?} elem\n * @return {?}\n */\nprivate offsetTop (elem: any) {\n    let /** @type {?} */ top = this.axis.topKey();\n\n    // elem = elem.nativeElement;\n    if (!elem.getBoundingClientRect) { // || elem.css('none')) {\n      return;\n    }\n    return elem.getBoundingClientRect()[top] + this.pageYOffset(elem);\n  }\n/**\n * @param {?} elem\n * @return {?}\n */\npageYOffset (elem: any) {\n    let /** @type {?} */ pageYOffset = this.axis.pageYOffsetKey();\n    let /** @type {?} */ scrollTop   = this.axis.scrollTopKey();\n    let /** @type {?} */ offsetTop   = this.axis.offsetTopKey();\n\n    // elem = elem.nativeElement;\n    if (isNaN(window[pageYOffset])) {\n      return this.getDocumentElement()[scrollTop];\n    } else if (elem.ownerDocument) {\n      return elem.ownerDocument.defaultView[pageYOffset];\n    } else {\n      return elem[offsetTop];\n    }\n  }\n}\n\nfunction PositionResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nPositionResolver.prototype.documentElement;\n/** @type {?} */\nPositionResolver.prototype.isContainerWindow;\n/** @type {?} */\nPositionResolver.prototype.container;\n/** @type {?} */\nPositionResolver.prototype.axis;\n/** @type {?} */\nPositionResolver.prototype.options;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nexport class AxisResolverFactory {\nconstructor() { }\n/**\n * @param {?=} vertical\n * @return {?}\n */\ncreate(vertical: boolean = true) {\n    return new AxisResolver(vertical);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AxisResolverFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nAxisResolverFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxisResolverFactory.ctorParameters;\n}\n\nexport class AxisResolver {\n/**\n * @param {?=} vertical\n */\nconstructor(private vertical: boolean = true) {\n  }\n/**\n * @return {?}\n */\nclientHeightKey() { return this.vertical ? 'clientHeight' : 'clientWidth'; }\n/**\n * @return {?}\n */\noffsetHeightKey() { return this.vertical ? 'offsetHeight' : 'offsetWidth'; }\n/**\n * @return {?}\n */\nscrollHeightKey() { return this.vertical ? 'scrollHeight' : 'scrollWidth'; }\n/**\n * @return {?}\n */\npageYOffsetKey() { return this.vertical ? 'pageYOffset' : 'pageXOffset'; }\n/**\n * @return {?}\n */\noffsetTopKey() { return this.vertical ? 'offsetTop' : 'offsetLeft'; }\n/**\n * @return {?}\n */\nscrollTopKey() { return this.vertical ? 'scrollTop' : 'scrollLeft'; }\n/**\n * @return {?}\n */\ntopKey() { return this.vertical ? 'top' : 'left'; }\n}\n\nfunction AxisResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nAxisResolver.prototype.vertical;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","Input","Output","NgZone","ElementRef","Directive","EventEmitter","Injectable","Observable"],"mappings":"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"}